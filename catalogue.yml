- name: Catalogue Component
  hosts: catalogue
  become: yes
  tasks:
  - name: setup nodesource on Ubuntu/Debian
    ansible.builtin.shell: curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
    
  - name: install nodeJS
    ansible.builtin.apt:
     name: nodejs 
     state: present
     update_cache: yes

 # - name: create roboshop user
  #  ansible.builtin.command: useradd roboshop
   # register: out    
  
  - name: check roboshop user exist or not
    ansible.builtin.command: id roboshop
    register: out #output is variable name
    ignore_errors: true

  - when: out.rc != 0
    name: create user roboshop
    become: yes # we need sudo access for this task only
    ansible.builtin.user:
      name: roboshop      

 # - name: create app dir
  #  ansible.builtin.file: 
   #   path: /app
    #  state: directory
     # mode: 0755

  - name: check /app directory exists or not
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: print the directory stats
    ansible.builtin.debug:
      msg: "output: {{directory}}"

  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory   
  
  - name: Download application code
    ansible.builtin.get_url: 
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip 
      dest: /tmp
      
  - name: unarchive the code
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes
      
 # - name: npm install packages
  #  ansible.builtin.yum:
   #   name: npm
    #  state: installed

  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app    

  - name: copy catalogue service config
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
 
  - name: setup systemd service
    ansible.builtin.systemd_service: 
      daemon_reload: true  

  #- name: copy mongo repo
    #ansible.builtin.copy:
      #src: mongodb-org.list
      #dest: /etc/apt/sources.list.d/mongodb-org.list
  
  - name: Remove broken mongodb-org.list
    ansible.builtin.file:
      path: /etc/apt/sources.list.d/mongodb-org.list
      state: absent


  - name: Add MongoDB GPG key
    ansible.builtin.apt_key:
      url: https://pgp.mongodb.com/server-6.0.asc
      state: present

  - name: Add MongoDB APT repository
    ansible.builtin.apt_repository:
      repo: "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse"
      state: present
      filename: 'mongodb-org-6.0'

  - name: Update apt cache
    ansible.builtin.apt:
      update_cache: yes


  - name: Install MongoDB client
    ansible.builtin.apt:
      name: mongodb-org-shell
      state: present
      update_cache: yes

  - name: Install MongoDB shell (mongosh)
    ansible.builtin.apt:
      name: mongodb-mongosh
      state: present
      update_cache: yes
      
  - name: load schema
    ansible.builtin.shell: mongosh --host mongodb.learndevops.sbs </app/schema/catalogue.js  
    ignore_errors: true

  - name: start and enable service 
    ansible.builtin.systemd_service:
      name: catalogue
      state: started
      enabled: true      
        